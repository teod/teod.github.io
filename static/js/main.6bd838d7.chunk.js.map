{"version":3,"sources":["reducers/reviews.js","reducers/company.js","reducers/index.js","api/index.js","epics/company.js","epics/reviews.js","utils/index.js","epics/index.js","components/Company/index.js","containers/Company/index.js","components/Modal/index.js","components/UserReview/index.js","containers/UserReview/index.js","components/Reviews/index.js","containers/Reviews/index.js","components/Main/index.js","App.js","serviceWorker.js","index.js"],"names":["initalState","data","id","username","rating","review","time","referral","userReview","description","isSaved","apiSaved","initialState","combineReducers","reviews","state","arguments","length","undefined","action","type","Object","objectSpread","Date","toISOString","company","handleResponse","response","contentType","headers","get","isJSON","indexOf","ok","json","noop","then","jsonError","Error","JSON","stringify","fetchCompany","action$","pipe","ofType","switchMap","url","request","fetch","Accept","from","api","map","fetchSuccess","result","companies","catchError","error","of","message","saveUserReview","state$","mergeMap","_ref","_ref$data","body","method","Content-Type","X-HITTA-DEVICE-NAME","X-HITTA-SHARED-IDENTIFIER","details","property","encodedKey","encodeURIComponent","encodedValue","push","join","formData","userName","score","comment","companyId","confirmAlert","title","buttons","label","onClick","epics","values","combineEpics","apply","toConsumableArray","Company","this","props","react_default","a","createElement","displayName","Component","mapDispatchToProps","connect","Modal","children","_ref$visible","visible","_ref$onClose","onClose","_ref$onSave","onSave","className","classNames","UserReview","onUsernameChange","event","value","target","_this","setState","updateUserReview","onDescriptionChange","_this$state","_this$props","userRating","_this$props2","prevProps","_this$props3","_this$props4","_this$props4$visible","renderUserRatingStars","_this$state2","src_components_Modal","userRatingDescription","placeholder","onChange","STAR_INACTIVE_COLOR","STAR_ACTIVE_COLOR","Avatar","src","concat","Math","floor","random","alt","Review","onOpenModal","Reviews_Avatar","react_stars_default","count","size","color1","color2","half","edit","timestamp","now","last","split","secondsPast","getTime","parseInt","day","getDate","month","toDateString","match","replace","year","getFullYear","timeSince","href","modalVisible","onCloseModal","onChangeRating","generalRating","reduce","acc","_ref2","containers_UserReview","toFixed","Reviews_Review","_ref3","index","react","key","_ref$reviews","Reviews","Main","containers_Company","containers_Reviews","epicMiddleware","createEpicMiddleware","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","run","App","es","Main_Main","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6bd838d7.chunk.js","sourcesContent":["const UPDATE_USER_REVIEW = 'reviews/UPDATE_USER_REVIEW'\nexport const SAVE_USER_REVIEW = 'reviews/SAVE_USER_REVIEW'\nconst SAVE_USER_REVIEW_SUCCESS = 'reviews/SAVE_USER_REVIEW_SUCCESS'\nconst SAVE_USER_REVIEW_FAILURE = 'reviews/SAVE_USER_REVIEW_FAILURE'\n\nconst initalState = {\n  data: [\n    {\n      id: 1,\n      username: 'Anonym',\n      rating: 4,\n      review: 'Liked it very much - probably one of the best thai restaurants in the city',\n      time: '2019-02-24T12:32:01.985Z',\n      referral: 'hitta.se',\n    },\n    {\n      id: 2,\n      username: 'Jenny Svensson',\n      rating: 4,\n      review: 'Maybe a bit too fast food. I personnaly dislike that. Good otherwise',\n      time: '2019-02-24T14:32:01.985Z',\n      referral: 'hitta.se',\n    },\n    {\n      id: 3,\n      username: 'happy56',\n      rating: 5,\n      review: 'Super good! Love the food!',\n      time: '2019-02-24T20:32:01.985Z',\n      referral: 'yelp.com',\n    },\n  ],\n  userReview: {\n    rating: null,\n    username: null,\n    description: null,\n    time: null,\n    isSaved: false,\n    apiSaved: false,\n    referral: 'hitta.se',\n  },\n}\n\nexport default (state = initalState, action) => {\n  switch (action.type) {\n    case UPDATE_USER_REVIEW: {\n      return {\n        ...state,\n        userReview: {\n          ...state.userReview,\n          ...action.data,\n          isSaved: false,\n        }\n      }\n    }\n    case SAVE_USER_REVIEW:\n      return {\n        ...state,\n        userReview: {\n          ...state.userReview,\n          ...action.data,\n        }\n      }\n    case SAVE_USER_REVIEW_SUCCESS:\n      return {\n        ...state,\n        userReview: {\n          ...state.userReview,\n          time: new Date().toISOString(),\n          isSaved: true,\n          apiSaved: true,\n        },\n      }\n    default:\n      return state\n  }\n}\n\nexport const updateUserReview = data => ({\n  type: UPDATE_USER_REVIEW,\n  data,\n})\n\nexport const saveUserReview = data => ({\n  type: SAVE_USER_REVIEW,\n  data,\n})\n\nexport const saveUserReviewSuccess = () => ({\n  type: SAVE_USER_REVIEW_SUCCESS,\n})\n\nexport const saveUserReviewFailure = () => ({\n  type: SAVE_USER_REVIEW_FAILURE,\n})\n","export const FETCH = 'company/FETCH'\nconst FETCH_SUCCESS = 'company/FETCH_SUCCESS'\nconst FETCH_FAILURE = 'company/FETCH_FAILURE'\n\nconst initialState = {\n  data: null,\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_SUCCESS: {\n      const { data } = action\n\n      return {\n        ...state,\n        data\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const fetch = () => ({\n  type: FETCH,\n})\n\nexport const fetchSuccess = data => ({\n  type: FETCH_SUCCESS,\n  data,\n})\n\nexport const fetchFailure = () => ({\n  type: FETCH_FAILURE,\n})\n","import { combineReducers } from 'redux'\nimport reviews from './reviews'\nimport company from './company'\n\nexport default combineReducers({ reviews, company })\n","import { from } from 'rxjs'\nimport noop from 'lodash/noop'\n\nconst handleResponse = response => {\n  const { headers } = response\n  const contentType = headers.get('Content-Type')\n  const isJSON = contentType && contentType.indexOf('application/json') !== -1\n\n  if (response.ok) {\n    if (isJSON) {\n      return response.json()\n    }\n\n    return noop()\n  } else {\n    if (isJSON) {\n      return response.json().then(jsonError => {\n        throw Error(JSON.stringify(jsonError))\n      })\n    }\n\n    throw Error(JSON.stringify(response))\n  }\n}\n\nexport const get = (url, headers = {}) => {\n    const defaultHeaders = {\n      Accept: 'application/json',\n    }\n\n    const request = fetch(url, {\n      headers: {\n        ...defaultHeaders,\n        ...headers,\n      },\n    }).then(handleResponse)\n\n    return from(request)\n  }\n\nexport const post = (url, body, headers = {}) => {\n  const defaultHeaders = {\n    Accept: 'application/json',\n    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n    'X-HITTA-DEVICE-NAME': 'MOBILE_WEB',\n    'X-HITTA-SHARED-IDENTIFIER': 15188693697264027,\n  }\n\n  const request = fetch(url, {\n    method: 'POST',\n    headers: { ...defaultHeaders, ...headers },\n    body,\n  }).then(handleResponse)\n\n  return from(request)\n}\n","import { of } from 'rxjs'\nimport { ofType } from 'redux-observable'\nimport { switchMap, map, catchError } from 'rxjs/operators'\nimport { FETCH, fetchSuccess, fetchFailure } from './../reducers/company'\nimport * as api from './../api'\n\nconst URL = process.env.NODE_ENV !== 'production'\n  ? '/search/v7/app/company/VdgWZZ___C'\n  : 'https://api.hitta.se/search/v7/app/company/VdgWZZ___C'\n\nexport const fetchCompany = action$ =>\n  action$.pipe(\n    ofType(FETCH),\n    switchMap(() =>\n      api.get(URL).pipe(\n        map(data => {\n          const { result: { companies: { company } } } = data\n\n          return fetchSuccess(company[0])\n        }),\n        catchError(error => of(fetchFailure(error.message)))\n      )\n    )\n  )\n","import { of } from 'rxjs'\nimport { ofType } from 'redux-observable'\nimport { mergeMap, map, catchError } from 'rxjs/operators'\nimport { confirmAlert } from 'react-confirm-alert'\nimport {\n  SAVE_USER_REVIEW,\n  saveUserReviewSuccess,\n  saveUserReviewFailure\n} from './../reducers/reviews'\nimport * as api from './../api'\nimport { formData } from './../utils'\n\nconst URL = 'https://test.hitta.se/reviews/v1/company'\n\nexport const saveUserReview = (action$, state$) =>\n  action$.pipe(\n    ofType(SAVE_USER_REVIEW),\n    mergeMap(({ data: { username, description, rating } }) => {\n      const body = formData({\n        userName: username,\n        score: rating,\n        comment: description,\n        companyId: 'VdgWZZ___C',\n      })\n\n      return api.post(URL, body).pipe(\n        map(() => {\n          confirmAlert({\n            title: 'Thank you for your review',\n            message: 'You\\'re helping others make smarter decisions every day.',\n            buttons: [\n              {\n                label: 'Okay!',\n                onClick: undefined,\n              },\n            ]\n          })\n\n          return saveUserReviewSuccess()\n        }),\n        catchError(error => of(saveUserReviewFailure(error.message)))\n      )\n    })\n  )\n","import last from 'lodash/last'\nimport get from 'lodash/get'\n\nexport const timeSince = timestamp => {\n  const now = new Date()\n  const then = new Date(last(timestamp.split('')) !== 'Z' ? `${timestamp}Z` : timestamp)\n  const secondsPast = (now.getTime() - then.getTime()) / 1000\n\n  if (secondsPast < 60) {\n    return 'just now'\n  }\n\n  if (secondsPast < 3600) {\n    return `${parseInt(secondsPast / 60, 10)}m ago`\n  }\n\n  if (secondsPast <= 86400) {\n    return `${parseInt(secondsPast / 3600, 10)}h ago`\n  }\n\n  // secondsPast > 86400\n  const day = then.getDate()\n  const month = get(then.toDateString().match(/ [a-zA-Z]*/), '[0]', '').replace(' ', '')\n  const year = then.getFullYear() === now.getFullYear() ? '' : ` ${then.getFullYear()}`\n\n  return `${day} ${month}${year}`\n}\n\nexport const userRatingDescription = rating => {\n  switch (rating) {\n    case 1:\n      return 'I hated it!'\n    case 2:\n      return 'I didn\\'t liked it'\n    case 3:\n      return 'It was OK'\n    case 4:\n      return 'I liked it!'\n    case 5:\n      return 'I loved it!'\n    default:\n      return ':o'\n  }\n}\n\nexport const formData = details => {\n  const body = []\n\n  for (const property in details) {\n    if (details[property]) {\n      const encodedKey = encodeURIComponent(property)\n      const encodedValue = encodeURIComponent(details[property])\n\n      body.push(encodedKey + '=' + encodedValue)\n    }\n  }\n\n  return body.join('&')\n}\n","import { combineEpics } from 'redux-observable'\nimport * as company from './company'\nimport * as reviews from './reviews'\n\nconst epics = Object.values({\n  ...company,\n  ...reviews,\n})\n\nexport default combineEpics(...epics)\n","import React, { Component } from 'react'\n\nexport default class Company extends Component {\n  componentDidMount() {\n    this.props.fetchCompany()\n  }\n\n  render() {\n    const { data } = this.props\n\n    return data ? <h1>{data.displayName}</h1> : null\n  }\n}\n","import { connect } from 'react-redux'\n\nimport { fetch } from './../../reducers/company'\nimport Company from './../../components/Company'\n\nconst mapStateToProps = ({ company: { data } }) => ({ data })\n\nconst mapDispatchToProps = { fetchCompany: fetch }\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Company)\n","import React from 'react'\nimport classNames from 'classnames'\nimport noop from 'lodash/noop'\nimport './index.css'\n\nconst Modal = ({ children, visible = false, onClose = noop, onSave = noop }) => (\n  <div className={classNames('modal', { visible })}>\n    <div className=\"header flex mb20\">\n      <div className=\"headerButton\" onClick={onClose}>Close</div>\n      <div className=\"headerButton\" onClick={onSave}>Save</div>\n    </div>\n    {children}\n  </div>\n)\n\nexport default Modal\n","import React, { Component } from 'react'\nimport { confirmAlert } from 'react-confirm-alert'\nimport 'react-confirm-alert/src/react-confirm-alert.css'\nimport Modal from './../Modal'\nimport './index.css'\n\nimport { userRatingDescription } from './../../utils'\n\nexport default class UserReview extends Component {\n  state = {\n    username: '',\n    description: '',\n  }\n\n  componentDidUpdate(prevProps) {\n    const { visible, updateUserReview, userRating } = this.props\n\n    if (visible === true && userRating !== prevProps.userRating) {\n      updateUserReview()\n    }\n\n    if (visible === false && visible !== prevProps.visible) {\n      this.setState(() => ({ username: '', description: '' }))\n    }\n  }\n\n  onUsernameChange = event => {\n    const { target: { value } } = event\n\n    this.setState(() => ({ username: value }))\n    const { updateUserReview } = this.props\n\n    updateUserReview()\n  }\n\n  onDescriptionChange = event => {\n    const { target: { value } } = event\n\n    this.setState(() => ({ description: value }))\n    const { updateUserReview } = this.props\n\n    updateUserReview()\n  }\n\n  onSave = () => {\n    const { username, description } = this.state\n    const { userRating, userReview } = this.props\n\n    this.props.saveUserReview({\n      username: username || userReview.username,\n      description: description || userReview.description,\n      rating: userRating\n    })\n  }\n\n  onClose = () => {\n    const { onClose, userReview: { isSaved } } = this.props\n\n    if (!isSaved) {\n      confirmAlert({\n        title: '',\n        message: 'Are you sure you want to close ?',\n        buttons: [\n          {\n            label: 'Exit and save your review',\n            onClick: () => {\n              this.onSave()\n              onClose()\n            }\n          },\n          {\n            label: 'Exit without saving',\n            onClick: () => onClose()\n          },\n          {\n            label: 'Cancel',\n            onClick: undefined,\n          },\n        ]\n      })\n    } else {\n      onClose()\n    }\n  }\n\n  render() {\n    const {\n      visible = false,\n      userRating,\n      userReview,\n      renderUserRatingStars,\n    } = this.props\n\n    const { username, description } = this.state\n\n    return (\n      <Modal visible={visible} onClose={this.onClose} onSave={this.onSave}>\n        <div className=\"mt20 mb20 starsWrapper\">\n          {renderUserRatingStars()}\n        </div>\n        <div className=\"ratingDescription\">\n          {userRatingDescription(userRating)}\n        </div>\n        <hr />\n        <input\n          className=\"input\"\n          placeholder=\"Your name\"\n          value={username || userReview.username || ''}\n          onChange={this.onUsernameChange}\n        />\n        <hr />\n        <textarea\n          className=\"input\"\n          placeholder=\"Add more details on your experience...\"\n          value={description || userReview.description || ''}\n          onChange={this.onDescriptionChange}\n        />\n      </Modal>\n    )\n  }\n}\n","import { connect } from 'react-redux'\n\nimport { updateUserReview, saveUserReview } from './../../reducers/reviews'\nimport UserReview from './../../components/UserReview'\n\nconst mapStateToProps = ({\n  reviews: { userReview },\n}) => ({ userReview })\n\nconst mapDispatchToProps = { updateUserReview, saveUserReview }\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserReview)\n","import React, { Component, Fragment } from 'react'\nimport ReactStars from 'react-stars'\n\nimport UserReview from './../../containers/UserReview'\nimport { timeSince } from './../../utils'\nimport './index.css'\n\nconst STAR_INACTIVE_COLOR = '#ccc'\nconst STAR_ACTIVE_COLOR = '#fed801'\n\nconst Avatar = () => {\n  const src = `http://i.pravatar.cc/50?img=${Math.floor(Math.random() * 70) + 1}`\n\n  return <img className=\"avatar\" src={src} alt=\"avatar\" />\n}\n\nconst Review = ({ username, rating, time, referral, review, onOpenModal }) => (\n  <div className=\"flex\">\n    <Avatar />\n    <div className=\"ml20\">\n      <div className=\"heading username\">{username || 'Anonymous'}</div>\n      <div className=\"flex alignItemsCenter mb5\">\n        <ReactStars\n          count={5}\n          size={14}\n          color1={STAR_INACTIVE_COLOR}\n          color2={STAR_ACTIVE_COLOR}\n          half={false}\n          edit={false}\n          value={rating}\n       />\n       <span className=\"secondaryText ml10\">{timeSince(time)} - {referral}</span>\n     </div>\n     {review ? (\n       <div>{review}</div>\n     ) : (\n       // eslint-disable-next-line\n       <a href={null} onClick={onOpenModal}>Describe your experience</a>\n     )}\n    </div>\n  </div>\n)\n\nexport default class Company extends Component {\n  state = { modalVisible: false, userRating: 0 }\n\n  onCloseModal = () => this.setState(() => ({ modalVisible: false }))\n\n  onChangeRating = userRating => this.setState(() => ({ modalVisible: true, userRating }))\n\n  onOpenModal = () => this.setState(() => ({ modalVisible: true }))\n\n  renderUserRatingStars = () => (\n    <ReactStars\n      count={5}\n      onChange={this.onChangeRating}\n      size={48}\n      color1={STAR_INACTIVE_COLOR}\n      color2={STAR_ACTIVE_COLOR}\n      half={false}\n      value={this.state.userRating}\n   />\n  )\n\n  render() {\n    const { data, userReview } = this.props\n\n    const generalRating = data.reduce((acc, { rating }) => acc + rating, 0) / data.length\n\n    const { modalVisible, userRating } = this.state\n\n    return (\n      <div className=\"container\">\n        <UserReview\n          visible={modalVisible}\n          onClose={this.onCloseModal}\n          renderUserRatingStars={this.renderUserRatingStars}\n          userRating={userRating}\n        />\n        <h2>Reviews</h2>\n        <div className=\"generalRatingWrapper\">\n          <div className=\"generalRating\">{generalRating.toFixed(1)}</div>\n          <div className=\"secondaryText ml20\">from {data.length} ratings</div>\n          <div className=\"viewReviewsHeaderWrapper\">\n            {/* eslint-disable-next-line */}\n            <a href={null}>View all reviews</a>\n          </div>\n        </div>\n        <hr />\n        {userReview.apiSaved === false ? (\n          <div className=\"flex\">\n            <Avatar />\n            <div className=\"ml20\">\n              <div className=\"heading\">Rate and review</div>\n              <div className=\"secondaryText\">Share your experience to help others</div>\n              {this.renderUserRatingStars()}\n            </div>\n          </div>\n        ) : (\n          <div className=\"relative\">\n            <Review\n              username={userReview.username}\n              rating={userReview.rating}\n              review={userReview.description}\n              time={userReview.time}\n              referral={userReview.referral}\n              onOpenModal={this.onOpenModal}\n            />\n            <span className=\"editReview\" onClick={this.onOpenModal}>...</span>\n          </div>\n        )}\n        <hr />\n        <div className=\"mb20\">\n          <div className=\"heading mb20\">Latest reviews</div>\n          {data.map(({ id, username, rating, review, time, referral }, index) => (\n            <Fragment key={id}>\n              <Review\n                username={username}\n                rating={rating}\n                review={review}\n                time={time}\n                referral={referral}\n              />\n              {index !== data.length - 1 && <hr />}\n            </Fragment>\n          ))}\n        </div>\n        <div className=\"viewReviewsFooterWrapper\">\n          {/* eslint-disable-next-line */}\n          <a href={null}>View all reviews</a>\n        </div>\n      </div>\n    )\n  }\n}\n","import { connect } from 'react-redux'\n\nimport Reviews from './../../components/Reviews'\n\nconst mapStateToProps = ({\n  reviews: { data, userReview },\n}) => ({\n  data,\n  userReview,\n})\n\nexport default connect(\n  mapStateToProps,\n)(Reviews)\n","import React, { Component } from 'react'\nimport Company from './../../containers/Company'\nimport Reviews from './../../containers/Reviews'\nimport './index.css'\n\nexport default class Main extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Company />\n        <Reviews />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport { createEpicMiddleware } from 'redux-observable'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './reducers'\nimport epics from './epics'\nimport Main from './components/Main'\n\nconst epicMiddleware = createEpicMiddleware()\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(epicMiddleware)))\n\nepicMiddleware.run(epics)\n\nconst App = () => (\n  <Provider store={store}>\n    <Main />\n  </Provider>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}